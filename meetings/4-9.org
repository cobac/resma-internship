* Topics to discuss
** QuickCheck testing
- tests
- safetests
- Hard to find some bugs
** Code
*** All tree movements implemented
- Still need to do proper testing
*** I thought multiple movements, but just one
- Probabilities add to 1
*** Delete movement
**** Infinite loop
- If no candidates, the probability of deleting is 0
**** I don't understand mutation sometimes
- Doesn't matter for the code because I'm reassigning everything but...
  
#+BEGIN_SRC julia :eval :session :results silent :exports code
  function delete_nothing!(node)
      # do stuff
      node = output
      return nothing
  end 

  function delete_node!(node)
      # do stuff
      node = output
      return node
  end 

  node = NewNode
  delete_nothing!(node) # Does not mutate node
  delete_node!(node) # Does not mutate node
  node = dele_node!(node) # Works
#+END_SRC

*** I think there is a bug in ExprRules.jl
- =node_depth()= and =get()=
- (?)

*** Bug with delete! and insert!
- Sometimes they don't change the size of the tree
- When the sampled node is root

*** Optimization things
- Make functions as pure as possible
- But not optimal
- e.g. passing grammars all the time
- Maybe make /pure/ modules instead (?)
  - Once the grammars interface

*** Should start adding docstrings
- And possibly too some comments to the code


