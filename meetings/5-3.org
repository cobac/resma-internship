* Things to discuss
** Re-implementation with custom types
- If I had to start over I wouldn't use ExprRules
- Comfortable way to learn the language
- I don't think it's worth to rewrite
  - Parser/interpreter
    - At the end a custom eval-table should be faster than dispatching with indexing (?)
  - Sampling
  - Location-accessing with hashes
  - Util functions
** Housekeeping
- Tests
- Docstrings
** Tried to separate p, p_inv calculation, but passing too many parameters
- =proposetree()= in =sampling.jl=
- Although better for testing 
** Bugs in movements
- Reassign operator
- Delete
** =append!()= again
** try-catch error to avoid non-proper equations
- In =step!()=
- In =Chain= initialization
- Overhead but.. works
  - In =SymbolicRegression.jl= they return a =Bool=
  - Their parser is different
** Simplifying equations
- =Symbolics.jl=
- Can simplify it
- Need to implement a parser from equation to tree
- Or translate the AST to a =RuleNode=
** Showcase
- Wonky output
- Idk Pluto
- Non-stable solutions
  - Jin et al. say 10k to stability
  - =lt()= missing
  - More grow probability
** Code review
* TO-DO
- =lt()=
  - Reversible jump
- User-facing functions
- ExprRules bug reports
** Later...
- Check performance
- Compare to other methods
- ... Maybe something else D:
- Write up the report
