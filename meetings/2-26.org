* to-do for the meeting
- Start outline of proposal 
- Start coding up the Bayesian SR without the linear transformation

* Topics to discuss during the meeting
** Bureaucracy
** ERB
- Would you do it for your own research?
- I've asked
** Code-wise
- Structure of the program
- DONE: Step to optimize \(\beta\)s for every tree.
*** Questions
- I'm still lost about how to import/export
  - Using ... :: Use exported functions + all junctions with Module.f syntax
    - Not in main.jl
- Workflow.
  - Immutable type declarations in modules?
  - Revise.jl?
- Import ~ExprRules.Base.append!()~
- Generate grammar from variables
  
  #+BEGIN_SRC julia :eval :session :results silent :exports code
    function xtogrammar(x)
        k = size(x)[2]
        v = [Symbol("x", i) for i in 1:k] # or
        v = join(["x" * string(i) for i in 1:k], ", ")
        # ....
    end 
  #+END_SRC
  
** Proposal outline
- I've included the relevant sections for a simulations-based internship
- What is the goal?
  - Implement different versions of the Bayesian SR.
  - Compare to related methods.
  - Justify interest -> No Bayesian version available (?)
    - Interpretable (physics things)
    - Not more computationally complex than other algorithms (genetic, DL)
  - What Bayesian implementation did you have in mind?
- Different schedule than non-methods internship.
  - Behind
- Independent evaluation, same page.

* For next meeting
- Continue coding the Bayesian SR
  - Tree modification functions
- Tests??
- Project organization in Julia
- Outline of proposal
  - Meeting on the 5th
