* Things to discuss
** =lt()=
- Got a nice answer from one of the maintainers of =ExprRules.jl=.
  - https://github.com/sisl/ExprRules.jl/issues/32
  - No need to modify their code.
- Store =LinearCoef= on each linear operator node.
  - Clutters the grammar with 1 extra rule
    - Need to make util functions more complex
    - Tons of weird quirks for evaluation
    - Probably worth the trade-off
  - [ ] Initialize them as (0, 0) instead of from the prior
    - To set/recover them we need to iterate throughout the tree
    - We need to do that either way to get the parameters to calculate probabilities
- [X] =EqTree= becomes just a =RuleNode=.
- [ ] Modify tree prior to work with =lt()= nodes.
  - =tree_p()= and =growtree()=.
- [X] Modifying / adding new tree util functions to work with =lt()= notes.
- [ ] Way of iterating through all linear operator nodes.
  - [ ] To update =a= and =b= on each proposal.
  - [ ] To get =a=s and =b=s into a vector to calculate probabilities.
** TODO Ratio calculation
* TO-DO
** User facing functions
- Interface function
- Input validation
  - Datasets
  - Hyperparams (non-negative prior variances, etc)
  - Operators (no collisions with linear type etc)
- Output summary, statistics
** Documentation
- Lot's of things that are only on the source code
  - Not easy to understand
  - Last big one: SymbolTable
    - Define the module of evaluation for symbols, don't include prefix
      - They are not defined on =Main=
    - But include prefix on the =_val= nodes
      - Because the get evaluated at =Main=
