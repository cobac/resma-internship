* Topics to discuss
** Implementation
*** I think it's correct
  - From Jin's paper only the goal of every step
  - All quirks to figure out
  - How to calculate q(S*|S), etc.
  - I expect to find bugs after testing
*** Behavior
- R
  - Either R = very big or Inf
    - The new sample is much more effective
  - Or R = very small or 0
    - The new sample is much more worse
  - Less stable at the beginning
- Sometimes non-invertible matrix for OLS
  - No idea yet
- Most of movements = grow!() at the beginning
  - Makes sense without =lt()=
- ~5 ms per step
- ~40% of acceptance rate
*** Messy code
  - Separate into multiple functions
  - I think the design is OK
  - Hyper scalars into prior
** Testing
- Parallel property-based
- Numerical testing?
** Showcase & code review
** =lt()=
- New type MyNode :> AbstractNode
  - RuleNode :> AbstractNode
  - I like the grammar and eval functionality
  - Should not be hard to modify the rest
- Using the =_val= field and custom =lt()= operator
  - Messes with their eval implementation
- I don't see a straightforward way of not modifying functionality from ExprRules
- I'll think more about it
* TO-DO next meeting
- Tests
- Bug reports
- Documentation
- Refactor hyperparams into priors
- Refactor sampling functions
- Design idea for =lt()=
